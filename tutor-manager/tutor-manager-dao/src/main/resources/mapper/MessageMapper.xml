<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="unsw.comp9900.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="unsw.comp9900.pojo.Message">
    <id column="mid" jdbcType="INTEGER" property="mid" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="t_to_s" jdbcType="BIT" property="tToS" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="unsw.comp9900.pojo.Message">
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>

  <resultMap id="MessageDTO" type="unsw.comp9900.pojo.MessageDTO">
    <id column="mid" jdbcType="INTEGER" property="mid" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="t_to_s" jdbcType="BIT" property="tToS" />
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
    <result column="StudentFirstName" jdbcType="VARCHAR" property="StudentFirstName" />
    <result column="StudentMiddleName" jdbcType="VARCHAR" property="StudentMiddleName" />
    <result column="StudentLastName" jdbcType="VARCHAR" property="StudentLastName" />
    <result column="TutorFirstName" jdbcType="VARCHAR" property="TutorFirstName" />
    <result column="TutorMiddleName" jdbcType="VARCHAR" property="TutorMiddleName" />
    <result column="TutorLastName" jdbcType="VARCHAR" property="TutorLastName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mid, tid, sid, time, t_to_s, is_delete
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="unsw.comp9900.pojo.MessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="unsw.comp9900.pojo.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where mid = #{mid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="unsw.comp9900.pojo.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="unsw.comp9900.pojo.Message">
    insert into message (mid, tid, sid, 
      time, t_to_s, is_delete, message
      )
    values (#{mid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{tToS,jdbcType=BIT}, #{isDelete,jdbcType=BIT}, #{message,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="unsw.comp9900.pojo.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        mid,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="tToS != null">
        t_to_s,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="tToS != null">
        #{tToS,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="unsw.comp9900.pojo.MessageExample" resultType="java.lang.Long">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="row.mid != null">
        mid = #{row.mid,jdbcType=INTEGER},
      </if>
      <if test="row.tid != null">
        tid = #{row.tid,jdbcType=INTEGER},
      </if>
      <if test="row.sid != null">
        sid = #{row.sid,jdbcType=INTEGER},
      </if>
      <if test="row.time != null">
        time = #{row.time,jdbcType=TIMESTAMP},
      </if>
      <if test="row.tToS != null">
        t_to_s = #{row.tToS,jdbcType=BIT},
      </if>
      <if test="row.isDelete != null">
        is_delete = #{row.isDelete,jdbcType=BIT},
      </if>
      <if test="row.message != null">
        message = #{row.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update message
    set mid = #{row.mid,jdbcType=INTEGER},
      tid = #{row.tid,jdbcType=INTEGER},
      sid = #{row.sid,jdbcType=INTEGER},
      time = #{row.time,jdbcType=TIMESTAMP},
      t_to_s = #{row.tToS,jdbcType=BIT},
      is_delete = #{row.isDelete,jdbcType=BIT},
      message = #{row.message,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set mid = #{row.mid,jdbcType=INTEGER},
      tid = #{row.tid,jdbcType=INTEGER},
      sid = #{row.sid,jdbcType=INTEGER},
      time = #{row.time,jdbcType=TIMESTAMP},
      t_to_s = #{row.tToS,jdbcType=BIT},
      is_delete = #{row.isDelete,jdbcType=BIT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="unsw.comp9900.pojo.Message">
    update message
    <set>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="tToS != null">
        t_to_s = #{tToS,jdbcType=BIT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="unsw.comp9900.pojo.Message">
    update message
    set tid = #{tid,jdbcType=INTEGER},
      sid = #{sid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      t_to_s = #{tToS,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT},
      message = #{message,jdbcType=LONGVARCHAR}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="unsw.comp9900.pojo.Message">
    update message
    set tid = #{tid,jdbcType=INTEGER},
      sid = #{sid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      t_to_s = #{tToS,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT}
    where mid = #{mid,jdbcType=INTEGER}
  </update>

  <select id="getMessageDTO" parameterType="unsw.comp9900.pojo.MessageDTO" resultMap="MessageDTO">
    SELECT
      m.mid AS mid,
      m.tid AS tid,
      m.sid AS sid,
      m.time AS time,
      m.t_to_s AS tToS,
      m.is_delete AS isDelete,
      m.message AS message,
      s.first_name AS StudentFirstName,
      s.middle_name AS StudentMiddleName,
      s.last_name AS StudentLastName,
      t.first_name AS TutorFirstName,
      t.middle_name AS TutorMiddleName,
      t.last_name AS TutorLastName
    FROM Message m
           JOIN Student s ON m.sid = s.uid
           JOIN Tutor t ON m.tid = t.uid
    WHERE (m.is_delete != 1 OR s.is_delete != 1 OR t.is_delete != 1);
  </select>
  <select id="getMessageDTOBySelective" parameterType="unsw.comp9900.pojo.MessageDTO" resultMap="MessageDTO">
    SELECT
      m.mid AS mid,
      m.tid AS tid,
      m.sid AS sid,
      m.time AS time,
      m.t_to_s AS tToS,
      m.is_delete AS isDelete,
      m.message AS message,
      s.first_name AS StudentFirstName,
      s.middle_name AS StudentMiddleName,
      s.last_name AS StudentLastName,
      t.first_name AS TutorFirstName,
      t.middle_name AS TutorMiddleName,
      t.last_name AS TutorLastName
    FROM Message m
           JOIN Student s ON m.sid = s.uid
           JOIN Tutor t ON m.tid = t.uid
    WHERE
      (m.is_delete != 1 OR s.is_delete != 1 OR t.is_delete != 1)
      AND (
      #{mid,jdbcType=INTEGER} IS NULL OR m.mid = #{mid,jdbcType=INTEGER}
      )
      AND (
      #{tid,jdbcType=INTEGER} IS NULL OR m.tid = #{tid,jdbcType=INTEGER}
      )
      AND (
      #{sid,jdbcType=INTEGER} IS NULL OR m.sid = #{sid,jdbcType=INTEGER}
      )
      AND (
      #{tToS,jdbcType=BOOLEAN} IS NULL OR m.t_to_s = #{tToS,jdbcType=BOOLEAN}
      )
      AND (
        #{isDelete,jdbcType=BOOLEAN} IS NULL OR m.is_delete = #{isDelete,jdbcType=BOOLEAN}
      )
      AND (
        #{StudentFirstName,jdbcType=VARCHAR} IS NULL OR s.first_name LIKE CONCAT('%', #{StudentFirstName,jdbcType=VARCHAR}, '%')
      )
      AND (
        #{StudentMiddleName,jdbcType=VARCHAR} IS NULL OR s.middle_name LIKE CONCAT('%', #{StudentMiddleName,jdbcType=VARCHAR}, '%')
      )
      AND (
        #{StudentLastName,jdbcType=VARCHAR} IS NULL OR s.last_name LIKE CONCAT('%', #{StudentLastName,jdbcType=VARCHAR}, '%')
      )
      AND (
        #{TutorFirstName,jdbcType=VARCHAR} IS NULL OR t.first_name LIKE CONCAT('%', #{TutorFirstName,jdbcType=VARCHAR}, '%')
      )
      AND (
        #{TutorMiddleName,jdbcType=VARCHAR} IS NULL OR t.middle_name LIKE CONCAT('%', #{TutorMiddleName,jdbcType=VARCHAR}, '%')
      )
      AND (
        #{TutorLastName,jdbcType=VARCHAR} IS NULL OR t.last_name LIKE CONCAT('%', #{TutorLastName,jdbcType=VARCHAR}, '%')
      )
  </select>
</mapper>